<template>
  <view class='p-home-index'>
    <view class='banners'>
      <swiper class='swiper-container'
              indicator-dots='{{swiper.indicatorDots}}'
              indicator-color='{{swiper.indicatorColor}}'
              indicator-active-color='{{swiper.indicatorActiveColor}}'
              autoplay='{{swiper.autoplay}}'
              interval='{{swiper.interval}}'
              duration='{{swiper.duration}}'>
        <!-- 注意，使用for属性，而不是使用wx:for属性 -->
        <repeat for='{{imgUrls}}' key='index' index='index' item='item'>
          <swiper-item>
            <image src='{{item}}' class='banner' mode='aspectFill' @tap='handleTapBanner({{index}})'></image>
          </swiper-item>
        </repeat>
      </swiper>
    </view>

    <view class='communities' wx:if="{{creations && creations.length > 0}}">
      <text class='title'>我开设的灯塔</text>
      <view class='list'>
        <repeat for='{{creations}}' key='index' index='index' item='item'>
          <creation-card class='community-item' :community.sync='item' @tap-card.user='handleTap'></creation-card>
        </repeat>
      </view>
    </view>
    <view class='communities' wx:if="{{joins && joins.length > 0}}">
      <text class='title'>我加入的灯塔</text>
      <view class='list'>
        <repeat for='{{joins}}' key='index' index='index' item='item'>
          <join-card class='community-item' :community.sync='item' @tap-card.user='handleTap'></join-card>
        </repeat>
      </view>
    </view>
    <view class='communities'>
      <text class='title'>精选灯塔</text>
      <view class='list'>
        <repeat for='{{communities}}' key='index' index='index' item='item'>
          <community-card class='community-item' :community.sync='item' @tap-card.user='handleTap'></community-card>
        </repeat>
      </view>
    </view>

    <view class='u-bottom-loading' wx:if="{{ready}}">
      <image class='icon' src='../../static/icon/icon_loading.gif' wx:if='{{!pagination.end}}'></image>
      <text class='text' wx:else>没有更多内容了～</text>
    </view>

    <message-toast></message-toast>
  </view>
</template>

<script>
import wepy from 'wepy'
import CountdownMixin from '@/mixins/countdown'
import ListMixin from '@/mixins/list'
import CommunityCard from '@/components/CommunityCard'
import MessageToast from '@/components/MessageToast'

import { getBeaconsApi } from '@/api/pages/home'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '首页',
    enablePullDownRefresh: true
  }

  mixins = [CountdownMixin, ListMixin]

  components = {
    'creation-card': CommunityCard,
    'join-card': CommunityCard,
    'community-card': CommunityCard,
    'message-toast': MessageToast
  }

  data = {
    trueValue: true,
    testImg: '../../static/test.png',
    swiper: {
      indicatorDots: true,
      indicatorColor: 'rgba(255, 255, 255, .3)',
      indicatorActiveColor: '#fff',
      autoplay: true,
      interval: 5000,
      duration: 300
    },
    imgUrls: [
      'https://zike-uploads-pro.oss-cn-shenzhen.aliyuncs.com/Uploads/static/beacon/head-banner.png',
      'https://zike-uploads-pro.oss-cn-shenzhen.aliyuncs.com/Uploads/static/beacon/sanyue.jpg',
    ],
    // 我创建的社区
    creations: [],
    // 我加入的社区
    joins: [],
    // 社区列表
    // communities: [],
    communities: [],
    ready: false
  }

  computed = {}

  methods = {
    /**
     * 点击卡片
     */
    handleTap (item) {
      console.log('item', item)
      console.log('isJoined', item.isJoined)
//      item['isCheck'] = true
      if (item.isAudit) {
        wx.showModal({
          title: '恭喜',
          content: `您已加入${item.title},请及时关注【自客】公众号上课。`,
          confirmText: '好的',
          showCancel: false
        })
        return
      }
      if (item.newMessage === 1) {
        item.newMessage = 0
        this.$apply()
      }
      if (item.isAuthor === 1 || item.isJoined === 1) { // 如果已经加入并且已入社跳转到入社后页面
        console.log(item)
        wx.navigateTo({
          url: `/pages/introduce/community?communityId=${item.communityId}`
        })
      } else { // 未入社跳到未入社页面
        wx.navigateTo({
          url: `/pages/introduce/index?communityId=${item.communityId}`
        })
      }
    },

    /**
     * 点击banner
     */
    handleTapBanner (index) {
      // 跳转到产品介绍页
      if (index === 0) {
        wx.navigateTo({
          url: '/pages/center/help'
        })
      }
    }
  }

  events = {}

  onLoad () {
    if (wx.getStorageSync('session_key')) {
      this.init()
    } else {
      this.$parent.sessionKeyReadyCallback = () => {
        this.init()
      }
    }
  }

  onPullDownRefresh () {
    this.init().then(res => {
      wx.stopPullDownRefresh()
    })
  }

  onReachBottom () {
    this.loadNext()
  }

  /**
   * 加载下一页
   */
  loadNext() {
    const nextPage = this.pagination.page + 1
    this.getList({ page: nextPage })
  }

  /**
   * 页面初始化
   */
  init () {
    this.pagination.end = false // 初始化数据，必定不是最后一页
    return Promise.all([this.getList({ page: 1 }), this.getBanners()]).then(res => {
      this.ready = true
    })
  }

  /**
   * 获取banner列表
   */
  getBanners () {
    return Promise.resolve()
  }

  /**
   * 获取列表
   */
  getList ({ page, pageSize } = {}) {
    if (this.pagination.end || this.pagination.busy) {
      // 防止多次加载
      return
    }
    page = page || this.pagination.page || 1
    pageSize = pageSize || this.pagination.pageSize
    const params = {
      page: page,
      pageCount: pageSize
    }

    this.pagination.busy = true
    return getBeaconsApi(params).then(({creations, joins, list, total}) => {
      this.creations = page === 1 ? creations : this.creations.concat(creations || [])
      this.joins = page === 1 ? joins : this.joins.concat(joins || [])
      this.communities = page === 1 ? list : this.communities.concat(list || [])

      this.pagination.page = page
      this.pagination.pageSize = pageSize
      this.pagination.total = total
      this.pagination.end = this.isLastPage()
      this.pagination.busy = false

      this.$apply()
    }).catch(e => {
      this.$broadcast('show-message', { content: e.message })
    }).then(res => {
      this.updateCountDown()
    })
  }

  /**
   * 更新列表中的倒计时
   */
  updateCountDown () {
    this.creations.forEach(item => {
      // 倒计时
      const countdown = this.getCountdown()
      countdown.start(item.startTime * 1000, (timestamp) => {
        if (timestamp > 0) {
          item.duration = this.durationFilter(timestamp)
        } else {
          item.duration = ''
        }
        this.$apply()
      })
      item.timeRange = `${this.format(item.startTime * 1000, 'YYYY年MM月DD日')}-${this.format(item.endTime * 1000, 'YYYY年MM月DD日')}`
      // 计算是否已结束
      item.isEnd = item.endTime * 1000 < new Date().getTime()
    })
    this.joins.forEach(item => {
      // 已加入社区只展示起止时间
      // const countdown = this.getCountdown()
      // countdown.start(item.startTime * 1000, (timestamp) => {
      //   if (timestamp > 0) {
      //     item.duration = this.durationFilter(timestamp)
      //   } else {
      //     item.duration = ''
      //   }
      //   this.$apply()
      // })
      item.timeRange = `${this.format(item.startTime * 1000, 'YYYY年MM月DD日')}-${this.format(item.endTime * 1000, 'YYYY年MM月DD日')}`
      // 计算是否已结束
      item.isEnd = item.endTime * 1000 < new Date().getTime()
    })
    this.communities.forEach(item => {
      // 倒计时
      const countdown = this.getCountdown()
      if (item.isJoined !== 1) {
        countdown.start(item.startTime * 1000, (timestamp) => {
          if (timestamp > 0) {
            item.duration = this.durationFilter(timestamp)
          } else {
            item.duration = ''
          }
          this.$apply()
        })
      }

      item.timeRange = `${this.format(item.startTime * 1000, 'YYYY年MM月DD日')}-${this.format(item.endTime * 1000, 'YYYY年MM月DD日')}`

      // 计算是否已结束
      item.isEnd = item.endTime * 1000 < new Date().getTime()
    })
  }

  onShareAppMessage (options) {
    const routes = this.getCurrentPages()
    const {route, options: option} = routes[routes.length - 1]
    let paramsStr = ''
    if (option) {
      for (let k in option) {
        if (paramsStr) {
          paramsStr += `&${k}=${option[k]}`
        } else {
          paramsStr += `?${k}=${option[k]}`
        }
      }
    }
    const path = '/' + route + paramsStr

    if (options.from === 'button') {
      // 来自页面内转发按钮
      console.log(options.target)
    }
    return {
      title: `小灯塔-职场导师知识分享在线课堂-照亮你职场的路`,
      path,
      imageUrl: 'https://cdnstatic.zike.com/Uploads/static/beacon/head-banner.png',
      success: function(res) {
        // 转发成功
        console.log('转发成功')
      },
      fail: function(res) {
        // 转发失败
      }
    }
  }
}
</script>

<style lang='less' type='text/less'>
.p-home-index {

  .banners {
    padding: 20rpx 30rpx 0;
    margin-bottom: 86rpx;
    border-radius: 6rpx;
    overflow: hidden;

    .swiper-container {
      height: 580rpx;
      border-radius: 6rpx;
      overflow: hidden;
    }

    .banner {
      width: 100%;
      height: 100%;
    }
  }

  .communities {
    padding: 20rpx 30rpx 40rpx;

    & > .title {
      display: block;
      margin-bottom: 20rpx;
      line-height: 60rpx;
      font-weight: bold;
      font-size: 40rpx;
    }

    .community-item:not(:last-child) {
      margin-bottom: 70rpx;
    }
  }
}
</style>
