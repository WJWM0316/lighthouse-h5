// ======== mixins ========

// 背景初始化
.initBg (@color: transparent, @image: none, @pos: center, @repeat: no-repeat, @size: contain) {
  background-color: @color;
  background-image: @image;
  background-position: @pos;
  background-repeat: @repeat;
  background-size: @size;
}

// icon初始化
.setIcon () {
  .initBg();
  display: inline-block;
  position: relative;
  top: -2px;
  vertical-align: middle;

  &.no-offset {
    position: static;
    top: auto;
  }
}

// button初始化
.setBtn () {
  .initBg();
  display: inline-block;
  border: none;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-appearance: none;

  &:focus {
    outline: none;
  }
}

// 图片初始化
.setImage (@round: 0) {
  display: inline-block;
  font-size: 0;
  line-height: 1;
  border-radius: @round;
  text-align: center;
  vertical-align: middle;
  overflow: hidden;

  & > img {
    max-width: 100%;
    height: auto;
  }

  &.vertical > img {
    width: auto;
    max-height: 100%;
  }

  &.auto > img {
    width: auto;
    height: auto;
    max-width: 100%;
    max-height: 100%;
  }
}

// 清除浮动
.setClearfix () {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}

// 设置宽高
.setSize (@width: auto, @height: auto) {
  width: @width;
  height: @height;
}

// 将px转换成rem
.px2rem (@name, @px, @remUnit: 37.5) when (iskeyword(@name)), (isunit(@px, px)) {
  @{name}: (@px / @remUnit) * 1rem;
}

// 小箭头（vux）
._setArrow (@arrowsize, @borderColor, @borderWidth) {
  display: inline-block;
  height: @arrowsize;
  width: @arrowsize;
  border-width: @borderWidth @borderWidth 0 0;
  border-color: @borderColor;
  border-style: solid;
}

.setArrow (@direction, @arrowsize, @borderColor, @borderWidth) when (@direction = top) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(0.71,-0.71,0.71,0.71,0,0); // rotate(-45deg)
}

.setArrow (@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = right) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(0.71,0.71,-0.71,0.71,0,0); // rotate(45deg);

  position: relative;
  top: -2px;
}

.setArrow (@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = down) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(-0.71,0.71,-0.71,-0.71,0,0); // rotate(135deg);

  position: relative;
  top: -3px;
}

.setArrow (@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = left) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(-0.71,-0.71,0.71,-0.71,0,0); // rotate(-135deg);

  position: relative;
  top: -2px;
}

// 单行超出省略
.setEllipsis (@width: 100%) {
  width: @width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

// 多行超出省略
.setEllipsisLn (@line: 2) {
  display: -webkit-box;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @line;
  overflow: hidden;
}

// 文本容器
.setTextWrap () {
  word-wrap: break-word;
  word-break: break-all;
}

// 富文本容器
.setRichTextWrap () {
  .setTextWrap();
  text-align: justify;

  img,
  table,
  video,
  audio {
    max-width: 100% !important;
    height: auto !important;
  }
}

// 英文连字号断行
.setHyphens () {
  word-wrap: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;
}

// 设置flex
.setFlex () {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

// 单选、复选框初始化
.setCheck (@type: radio) {
  position: relative;
  display: inline-block;

  & > input[type="@{type}"] {
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    height: 0;
    visibility: hidden;
  }

  & > label {
    display: inline-block;
  }
}
